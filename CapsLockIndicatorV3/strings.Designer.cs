//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapsLockIndicatorV3 {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CapsLockIndicatorV3.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjusting color scheme... Please wait... ähnelt.
        /// </summary>
        internal static string adjustingColorScheme {
            get {
                return ResourceManager.GetString("adjustingColorScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Settings ähnelt.
        /// </summary>
        internal static string advancedSettings {
            get {
                return ResourceManager.GetString("advancedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I understand the above mentioned risks and wish to proceed ähnelt.
        /// </summary>
        internal static string advancedSettingsConfirmation {
            get {
                return ResourceManager.GetString("advancedSettingsConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced settings ähnelt.
        /// </summary>
        internal static string advancedSettingsTitle {
            get {
                return ResourceManager.GetString("advancedSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing advanced settings may cause unexpected behaviour and may lead to an unstable state of CapsLock Indicator. Please restart CapsLock Indicator after changing settings. Only change settings if you know what you are doing! Use this editor at your own risk! ähnelt.
        /// </summary>
        internal static string advancedSettingsWarning {
            get {
                return ResourceManager.GetString("advancedSettingsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically check for updates ähnelt.
        /// </summary>
        internal static string autoCheckForUpdates {
            get {
                return ResourceManager.GetString("autoCheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background colour activated ähnelt.
        /// </summary>
        internal static string backgroundColourActivatedButton {
            get {
                return ResourceManager.GetString("backgroundColourActivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background colour deactivated ähnelt.
        /// </summary>
        internal static string backgroundColourDeactivatedButton {
            get {
                return ResourceManager.GetString("backgroundColourDeactivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Border colour activated ähnelt.
        /// </summary>
        internal static string borderColourActivatedButton {
            get {
                return ResourceManager.GetString("borderColourActivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Border colour decativated ähnelt.
        /// </summary>
        internal static string borderColourDeactivatedButton {
            get {
                return ResourceManager.GetString("borderColourDeactivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Border thickness ähnelt.
        /// </summary>
        internal static string borderThicknessGroup {
            get {
                return ResourceManager.GetString("borderThicknessGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C&amp;ancel ähnelt.
        /// </summary>
        internal static string cancel {
            get {
                return ResourceManager.GetString("cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Caps lock ähnelt.
        /// </summary>
        internal static string capsLock {
            get {
                return ResourceManager.GetString("capsLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off ähnelt.
        /// </summary>
        internal static string cbPersistentCapsOff {
            get {
                return ResourceManager.GetString("cbPersistentCapsOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On ähnelt.
        /// </summary>
        internal static string cbPersistentCapsOn {
            get {
                return ResourceManager.GetString("cbPersistentCapsOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off ähnelt.
        /// </summary>
        internal static string cbPersistentNumOff {
            get {
                return ResourceManager.GetString("cbPersistentNumOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On ähnelt.
        /// </summary>
        internal static string cbPersistentNumOn {
            get {
                return ResourceManager.GetString("cbPersistentNumOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off ähnelt.
        /// </summary>
        internal static string cbPersistentScrollOff {
            get {
                return ResourceManager.GetString("cbPersistentScrollOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On ähnelt.
        /// </summary>
        internal static string cbPersistentScrollOn {
            get {
                return ResourceManager.GetString("cbPersistentScrollOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for &amp;updates ähnelt.
        /// </summary>
        internal static string checkForUpdates {
            get {
                return ResourceManager.GetString("checkForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking for updates... ähnelt.
        /// </summary>
        internal static string checkingForUpdates {
            get {
                return ResourceManager.GetString("checkingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Close ähnelt.
        /// </summary>
        internal static string close {
            get {
                return ResourceManager.GetString("close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colours ähnelt.
        /// </summary>
        internal static string coloursGroup {
            get {
                return ResourceManager.GetString("coloursGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Exit ähnelt.
        /// </summary>
        internal static string contextMenuExit {
            get {
                return ResourceManager.GetString("contextMenuExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Show ähnelt.
        /// </summary>
        internal static string contextMenuShow {
            get {
                return ResourceManager.GetString("contextMenuShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Dark mode ähnelt.
        /// </summary>
        internal static string darkModeOption {
            get {
                return ResourceManager.GetString("darkModeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dismiss ähnelt.
        /// </summary>
        internal static string dismiss {
            get {
                return ResourceManager.GetString("dismiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Dismiss ähnelt.
        /// </summary>
        internal static string dismissButton {
            get {
                return ResourceManager.GetString("dismissButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display time ähnelt.
        /// </summary>
        internal static string displayTime {
            get {
                return ResourceManager.GetString("displayTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download icon packs ähnelt.
        /// </summary>
        internal static string downloadIcons {
            get {
                return ResourceManager.GetString("downloadIcons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download &amp;manually ähnelt.
        /// </summary>
        internal static string downloadManuallyButton {
            get {
                return ResourceManager.GetString("downloadManuallyButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download more translations... ähnelt.
        /// </summary>
        internal static string downloadMoreTranslations {
            get {
                return ResourceManager.GetString("downloadMoreTranslations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download translations ähnelt.
        /// </summary>
        internal static string downloadTranslationsTitle {
            get {
                return ResourceManager.GetString("downloadTranslationsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Exit Application ähnelt.
        /// </summary>
        internal static string exitApplication {
            get {
                return ResourceManager.GetString("exitApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exiting the application means the icons and notifications are no longer displayed. Exit anyway? ähnelt.
        /// </summary>
        internal static string exitMessage {
            get {
                return ResourceManager.GetString("exitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to download translation ähnelt.
        /// </summary>
        internal static string failedToDownloadTranslationToolTip {
            get {
                return ResourceManager.GetString("failedToDownloadTranslationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow CapsLock Indicator to periodically check for updates online (can be changed later) ähnelt.
        /// </summary>
        internal static string firstRunAllowUpdateCheck {
            get {
                return ResourceManager.GetString("firstRunAllowUpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Dark ähnelt.
        /// </summary>
        internal static string firstRunColorSchemeDark {
            get {
                return ResourceManager.GetString("firstRunColorSchemeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die L&amp;ight ähnelt.
        /// </summary>
        internal static string firstRunColorSchemeLight {
            get {
                return ResourceManager.GetString("firstRunColorSchemeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Which color scheme do you prefer? ähnelt.
        /// </summary>
        internal static string firstRunColorSchemePreference {
            get {
                return ResourceManager.GetString("firstRunColorSchemePreference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only available on Windows 10 or later ähnelt.
        /// </summary>
        internal static string firstRunColorSchemeWin10Only {
            get {
                return ResourceManager.GetString("firstRunColorSchemeWin10Only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contribute ähnelt.
        /// </summary>
        internal static string firstRunContribute {
            get {
                return ResourceManager.GetString("firstRunContribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Exit ähnelt.
        /// </summary>
        internal static string firstRunExit {
            get {
                return ResourceManager.GetString("firstRunExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Welcome to CapsLock Indicator ähnelt.
        /// </summary>
        internal static string firstRunHeading {
            get {
                return ResourceManager.GetString("firstRunHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thank you for choosing CapsLock Indicator! This program is open-source and free, always has been, always will be! Are you interested in contributing to CapsLock Indicator yourself? Visit the link below for more information! Also, please take a moment to review the settings below! ähnelt.
        /// </summary>
        internal static string firstRunMessage {
            get {
                return ResourceManager.GetString("firstRunMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What information will be sent? ähnelt.
        /// </summary>
        internal static string firstRunPrivacyInfoLinkLabel {
            get {
                return ResourceManager.GetString("firstRunPrivacyInfoLinkLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Let&apos;s go! ähnelt.
        /// </summary>
        internal static string firstRunStart {
            get {
                return ResourceManager.GetString("firstRunStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font ähnelt.
        /// </summary>
        internal static string fontGroup {
            get {
                return ResourceManager.GetString("fontGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text colour activated ähnelt.
        /// </summary>
        internal static string foregroundColourActivatedButton {
            get {
                return ResourceManager.GetString("foregroundColourActivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text colour deactivated ähnelt.
        /// </summary>
        internal static string foregroundColourDeactivatedButton {
            get {
                return ResourceManager.GetString("foregroundColourDeactivatedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can show CapsLock Indicator again by double clicking on this icon. ähnelt.
        /// </summary>
        internal static string generalIconBalloonText {
            get {
                return ResourceManager.GetString("generalIconBalloonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning! ähnelt.
        /// </summary>
        internal static string headerWarning {
            get {
                return ResourceManager.GetString("headerWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide on start up ähnelt.
        /// </summary>
        internal static string hideOnStartup {
            get {
                return ResourceManager.GetString("hideOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Hide window ähnelt.
        /// </summary>
        internal static string hideWindow {
            get {
                return ResourceManager.GetString("hideWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading metadata... ähnelt.
        /// </summary>
        internal static string iconPackDownloadingMetadata {
            get {
                return ResourceManager.GetString("iconPackDownloadingMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading pack... ähnelt.
        /// </summary>
        internal static string iconPackDownloadingPack {
            get {
                return ResourceManager.GetString("iconPackDownloadingPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to install the icon pack “{name}” (Version {version}) by {authorName}? ähnelt.
        /// </summary>
        internal static string iconPackPrompt {
            get {
                return ResourceManager.GetString("iconPackPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to reset the icons to the default ones? ähnelt.
        /// </summary>
        internal static string iconPackResetPrompt {
            get {
                return ResourceManager.GetString("iconPackResetPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Icons were reset to default! ähnelt.
        /// </summary>
        internal static string iconPackResetSuccess {
            get {
                return ResourceManager.GetString("iconPackResetSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully installed icon pack “{name}” (Version {version})! ähnelt.
        /// </summary>
        internal static string iconPackSuccess {
            get {
                return ResourceManager.GetString("iconPackSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} changed ähnelt.
        /// </summary>
        internal static string keyChanged {
            get {
                return ResourceManager.GetString("keyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is off ähnelt.
        /// </summary>
        internal static string keyIsOff {
            get {
                return ResourceManager.GetString("keyIsOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is on ähnelt.
        /// </summary>
        internal static string keyIsOn {
            get {
                return ResourceManager.GetString("keyIsOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;No ähnelt.
        /// </summary>
        internal static string no {
            get {
                return ResourceManager.GetString("no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Notification settings ähnelt.
        /// </summary>
        internal static string notificationSettings {
            get {
                return ResourceManager.GetString("notificationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification Settings ähnelt.
        /// </summary>
        internal static string notificationSettingsTitle {
            get {
                return ResourceManager.GetString("notificationSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Num lock ähnelt.
        /// </summary>
        internal static string numLock {
            get {
                return ResourceManager.GetString("numLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;OK ähnelt.
        /// </summary>
        internal static string ok {
            get {
                return ResourceManager.GetString("ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity ähnelt.
        /// </summary>
        internal static string opacity {
            get {
                return ResourceManager.GetString("opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overlay position ähnelt.
        /// </summary>
        internal static string overlayPositionGroup {
            get {
                return ResourceManager.GetString("overlayPositionGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permanently ähnelt.
        /// </summary>
        internal static string permanentIndicator {
            get {
                return ResourceManager.GetString("permanentIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...Caps lock is ähnelt.
        /// </summary>
        internal static string persistentCapsLabel {
            get {
                return ResourceManager.GetString("persistentCapsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show persistent overlay when... ähnelt.
        /// </summary>
        internal static string persistentHeadingLabel {
            get {
                return ResourceManager.GetString("persistentHeadingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...Num lock is ähnelt.
        /// </summary>
        internal static string persistentNumLabel {
            get {
                return ResourceManager.GetString("persistentNumLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...Scroll lock is ähnelt.
        /// </summary>
        internal static string persistentScrollLabel {
            get {
                return ResourceManager.GetString("persistentScrollLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reloaded icons ähnelt.
        /// </summary>
        internal static string reloadedIconsInfo {
            get {
                return ResourceManager.GetString("reloadedIconsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset settings ähnelt.
        /// </summary>
        internal static string resetSettings {
            get {
                return ResourceManager.GetString("resetSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will reset all settings to their default values and restart CapsLock Indicator. All customisation will be lost! This cannot be undone!
        ///Do you want to reset all settings now? ähnelt.
        /// </summary>
        internal static string resetSettingsConfirmationText {
            get {
                return ResourceManager.GetString("resetSettingsConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Restart ähnelt.
        /// </summary>
        internal static string restart {
            get {
                return ResourceManager.GetString("restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Save &amp;&amp; close ähnelt.
        /// </summary>
        internal static string saveAndCloseButton {
            get {
                return ResourceManager.GetString("saveAndCloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scroll lock ähnelt.
        /// </summary>
        internal static string scrollLock {
            get {
                return ResourceManager.GetString("scrollLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for &amp;updates on resume ähnelt.
        /// </summary>
        internal static string searchForUpdatesOnResumeOption {
            get {
                return ResourceManager.GetString("searchForUpdatesOnResumeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings have moved! You will now find them in these tabs up here! ähnelt.
        /// </summary>
        internal static string settingsChangedToolTip {
            get {
                return ResourceManager.GetString("settingsChangedToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show icons for... ähnelt.
        /// </summary>
        internal static string showIconsFor {
            get {
                return ResourceManager.GetString("showIconsFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show no icons ähnelt.
        /// </summary>
        internal static string showNoIcons {
            get {
                return ResourceManager.GetString("showNoIcons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show no notification ähnelt.
        /// </summary>
        internal static string showNoNotification {
            get {
                return ResourceManager.GetString("showNoNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show notification when... ähnelt.
        /// </summary>
        internal static string showNotificationWhen {
            get {
                return ResourceManager.GetString("showNotificationWhen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always show overlay when active ähnelt.
        /// </summary>
        internal static string showOverlayOnlyWhenActive {
            get {
                return ResourceManager.GetString("showOverlayOnlyWhenActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start on logon ähnelt.
        /// </summary>
        internal static string startOnLogon {
            get {
                return ResourceManager.GetString("startOnLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Options ähnelt.
        /// </summary>
        internal static string tabAdvancedOptions {
            get {
                return ResourceManager.GetString("tabAdvancedOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        internal static string tabGeneral {
            get {
                return ResourceManager.GetString("tabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification ähnelt.
        /// </summary>
        internal static string tabNotification {
            get {
                return ResourceManager.GetString("tabNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This version of CapsLock Indicator (Version {version}) is not supported. Please update to the latest version! ähnelt.
        /// </summary>
        internal static string unsupportedCLI {
            get {
                return ResourceManager.GetString("unsupportedCLI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are using {os} which is no longer supported by Microsoft. CapsLock Indicator will drop support for this OS in the future! Please upgrade to a modern version of Windows! ähnelt.
        /// </summary>
        internal static string unsupportedWin {
            get {
                return ResourceManager.GetString("unsupportedWin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CapsLock Indicator Update available! ähnelt.
        /// </summary>
        internal static string updateAvailable {
            get {
                return ResourceManager.GetString("updateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version {0}, released {1} ähnelt.
        /// </summary>
        internal static string updateInfoFormat {
            get {
                return ResourceManager.GetString("updateInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some of the currently installed translations seem to be outdated. Do you want to update them now? ähnelt.
        /// </summary>
        internal static string updateLocaleMessageBox {
            get {
                return ResourceManager.GetString("updateLocaleMessageBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Update now ähnelt.
        /// </summary>
        internal static string updateNow {
            get {
                return ResourceManager.GetString("updateNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes ähnelt.
        /// </summary>
        internal static string yes {
            get {
                return ResourceManager.GetString("yes", resourceCulture);
            }
        }
    }
}
